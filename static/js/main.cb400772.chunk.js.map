{"version":3,"sources":["utils/theme.js","redux/ducks/rootReducer.js","redux/index.js","redux/ducks/main.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","layout","contentWidth","footerWidth","palette","primary","main","footer","secondary","common","black","darkBlack","warning","light","dark","tonalOffset","background","default","gray","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderColor","borderWidth","overrides","typography","useNextVariants","allVariants","color","locale","responsiveFontSizes","combineReducers","store","createStore","rootreducer","Types","INITIAL_STATE","role","user","admin","customer","customerB","architect","architectB","builder","validator","new_authority","SNS","program","pool_flag","owner","architectToken","builderToken","validatorToken","mint","poolVault","adminkey","reducer","state","type","payload","setPoolFlag","setRole","setProgram","setInit","wallets","getPhantomWallet","getSolletExtensionWallet","network","clusterApiUrl","console","log","MainComponent","lazy","App","CssBaseline","fallback","endpoint","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb400772.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport * as locale from '@material-ui/core/locale';\r\n\r\n\r\n\r\n// colors\r\nconst primary = \"#6E56F8\";\r\nconst secondary = \"#11243E\";\r\nconst black = \"#303030\";\r\nconst darkBlack = \"#0c1319\";\r\nconst background = \"#fff\";\r\nconst warningLight = \"rgba(255, 246, 32, .3)\";\r\nconst warningMain = \"rgba(255, 246, 32, .5)\";\r\nconst warningDark = \"rgba(255, 246, 32, .7)\";\r\n\r\n// border\r\nconst borderWidth = 1;\r\nconst borderColor = \"#2e6da4\";\r\n\r\n// breakpoints\r\nconst xl = 1920;\r\nconst lg = 1280;\r\nconst md = 960;\r\nconst sm = 600;\r\nconst xs = 0;\r\n\r\n// spacing\r\nconst spacing = 8;\r\n\r\nconst theme = createMuiTheme({\r\n    layout: {\r\n        contentWidth: 1140,\r\n        footerWidth: 1400\r\n    },\r\n    palette: {\r\n        primary: { main: primary, footer: '#055da6' },\r\n        secondary: { main: secondary },\r\n        common: {\r\n            black,\r\n            darkBlack\r\n        },\r\n        warning: {\r\n            light: warningLight,\r\n            main: warningMain,\r\n            dark: warningDark\r\n        },\r\n        tonalOffset: 0.2,\r\n        background: {\r\n            default: background,\r\n            gray: '#f1f1f170'\r\n        },\r\n        spacing\r\n    },\r\n    breakpoints: {\r\n        values: {\r\n            xl,\r\n            lg,\r\n            md,\r\n            sm,\r\n            xs\r\n        }\r\n    },\r\n    border: {\r\n        borderColor: borderColor,\r\n        borderWidth: borderWidth\r\n    },\r\n    overrides: {\r\n\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        allVariants: {\r\n            color: 'white'\r\n        }\r\n    }\r\n}, locale['EN']);\r\n\r\nexport default responsiveFontSizes(theme);\r\n","import { combineReducers } from 'redux';\r\nimport main from './main';\r\n\r\nexport default combineReducers({ main });","import { createStore } from 'redux';\r\nimport rootreducer from './ducks/rootReducer';\r\n\r\nconst store = createStore(rootreducer);\r\n\r\nexport default store;","//Types\r\nexport const Types = {\r\n    SETROLE: '@setRole',\r\n    SETINIT: '@setInit',\r\n    SETPROGRAM: '@setProgram',\r\n    SETPOOLFLAG: '@setPoolFlag'\r\n}\r\n\r\n//Reducer\r\n\r\nconst INITIAL_STATE = {\r\n    role: 0,\r\n    user: null,\r\n    admin: null,\r\n    customer: null,\r\n    customerB: null,\r\n    architect: null,\r\n    architectB: null,\r\n    builder: null,\r\n    validator: null,\r\n    new_authority: null,\r\n    SNS: null,\r\n    program: null,\r\n    pool_flag: false,\r\n    owner: null,\r\n    architectToken: null,\r\n    builderToken: null,\r\n    validatorToken: null,\r\n    mint: null,\r\n    poolVault: null,\r\n    adminkey: null\r\n\r\n};\r\n\r\nexport default function reducer(\r\n    state = INITIAL_STATE,\r\n    { type, payload }\r\n) {\r\n    switch (type) {\r\n        case Types.SETROLE:\r\n            return { ...state, role: payload };\r\n        case Types.SETINIT:\r\n            return {\r\n                ...state, user: payload.user, admin: payload.admin,\r\n                customer: payload.customer, customerB: payload.customerB,\r\n                architect: payload.architect, architectB: payload.architectB,\r\n                builder: payload.builder, validator: payload.validator,\r\n                new_authority: payload.new_authority,\r\n                SNS: payload.SNS, program: payload.program,\r\n                owner: payload.owner,\r\n                architectToken: payload.architectToken,\r\n                builderToken: payload.builderToken,\r\n                validatorToken: payload.validatorToken,\r\n                mint: payload.mint,\r\n                poolVault: payload.poolVault,\r\n                adminkey: payload.adminkey\r\n            };\r\n        case Types.SETPROGRAM:\r\n            return { ...state, program: payload };\r\n        case Types.SETPOOLFLAG:\r\n            return { ...state, pool_flag: payload }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionS\r\nexport const setPoolFlag = (pool_flag) => ({ type: Types.SETPOOLFLAG, payload: pool_flag })\r\nexport const setRole = (role) => ({ type: Types.SETROLE, payload: role })\r\nexport const setProgram = (program) => ({ type: Types.SETPROGRAM, payload: program })\r\nexport const setInit = (user, admin, customer, customerB, architect, architectB, builder, validator, new_authority, SNS, program, owner, architectToken,\r\n    builderToken, validatorToken, mint, poolVault, adminkey) => ({\r\n        type: Types.SETINIT, payload: {\r\n            user, admin, customer, customerB, architect, architectB, builder, validator, new_authority, SNS, program, owner, architectToken,\r\n            builderToken, validatorToken, mint, poolVault, adminkey\r\n        }\r\n    })\r\n","import React, { Fragment, Suspense, lazy } from \"react\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport theme from \"./utils/theme\";\r\nimport './App.css';\r\nimport { getPhantomWallet, getSolletExtensionWallet } from '@solana/wallet-adapter-wallets';\r\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\r\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport {\r\n  clusterApiUrl\r\n} from '@solana/web3.js';\r\n\r\n\r\nconst wallets = [\r\n  /* view list of available wallets at https://github.com/solana-labs/wallet-adapter#wallets */\r\n  getPhantomWallet(),\r\n  getSolletExtensionWallet()\r\n]\r\nconst network = clusterApiUrl('devnet');\r\nconsole.log('network', network)\r\n\r\nconst MainComponent = lazy(() => import(\"./components/Main\"));\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Router>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Suspense fallback={<Fragment />}>\r\n          <ConnectionProvider endpoint={network}>\r\n            <WalletProvider wallets={wallets} autoConnect>\r\n              <WalletModalProvider>\r\n                <Switch>\r\n                  <Route>\r\n                    <MainComponent />\r\n                  </Route>\r\n                </Switch>\r\n              </WalletModalProvider>\r\n            </WalletProvider>\r\n          </ConnectionProvider>\r\n        </Suspense>\r\n      </MuiThemeProvider>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}